{"name": "用户输入运算数据a、b, a、b的数据类型不合法", "status": "skipped", "statusDetails": {"message": "XFAIL\n\nTypeError: '>' not supported between instances of 'str' and 'int'", "trace": "self = <test_case.test_case_02.TestCase object at 0x0000025865B15100>, a = 'a', b = 'b', expected = '输入数据a、b不合法'\n\n    @allure.title(\"用户输入运算数据a、b, a、b的数据类型不合法\")\n    @pytest.mark.xfail\n    @pytest.mark.test_data_type_error\n    @pytest.mark.parametrize('a,b,expected', GetData.get_data_type_error())\n    def test_add_data_type_error(self, a, b, expected):\n        \"\"\"\n        测试add()函数对输入数据的数据类型报错提示\n        :param a: 除int整型、float浮点型、double浮点型以外的其他数据类型\n        :param b: 除int整型、float浮点型、double浮点型以外的其他数据类型\n        :param expected: 输出报错提示: 输入的数据a、b数据类型不合法；\n        :return: 返回报错提示：输入的数据a、b数据类型不合法；\n        \"\"\"\n        caculator = Caculator(a, b)\n>       assert caculator.add() == expected\n\ntest_case_02.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <func.func.Caculator object at 0x0000025865B59C10>\n\n    def add(self):\n    \n>       if self.a > 99 or self.a < -99 or self.b > 99 or self.b < -99:\nE       TypeError: '>' not supported between instances of 'str' and 'int'\n\n..\\func\\func.py:32: TypeError"}, "description": "\n        测试add()函数对输入数据的数据类型报错提示\n        :param a: 除int整型、float浮点型、double浮点型以外的其他数据类型\n        :param b: 除int整型、float浮点型、double浮点型以外的其他数据类型\n        :param expected: 输出报错提示: 输入的数据a、b数据类型不合法；\n        :return: 返回报错提示：输入的数据a、b数据类型不合法；\n        ", "parameters": [{"name": "a", "value": "'a'"}, {"name": "b", "value": "'b'"}, {"name": "expected", "value": "'输入数据a、b不合法'"}], "start": 1713874465132, "stop": 1713874465132, "uuid": "ba456fe7-11ee-4b3a-9d1f-b1f44c5bc75e", "historyId": "4095529d1a9b81bf6f294a3b34c7b045", "testCaseId": "fc3f193172e053d7630156f8f03e0a17", "fullName": "test_case.test_case_02.TestCase#test_add_data_type_error", "labels": [{"name": "tag", "value": "test_data_type_error"}, {"name": "tag", "value": "@pytest.mark.xfail"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_case_02"}, {"name": "subSuite", "value": "TestCase"}, {"name": "host", "value": "wangmin"}, {"name": "thread", "value": "21192-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_case_02"}]}